@model Spacer.Models.Espaco

@{
    ViewBag.Title = "Cadastro";
}

<h2>Cadastro</h2>


@using (Html.BeginForm("Cadastro", "Espaco", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Espaco</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoEspacoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoEspacoId, (IEnumerable<SelectListItem>)ViewBag.TipoEspaco, "Selecione um Tipo de Espaço", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoEspacoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Foto 1", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" id="foto1" name="fotos" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Foto 2", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" id="foto2" name="fotos" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Foto 3", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" value="" id="foto3" name="fotos" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace((string)ViewBag.Foto1))
        {
            <div class="form-group">
                <img src="@Url.Content("~/FotosEspacos/")@ViewBag.Foto1" class="img-responsive" alt="Responsive image">
            </div>
        }
        @if (!string.IsNullOrWhiteSpace((string)ViewBag.Foto2))
        {
            <div class="form-group">
                <img src="@Url.Content("~/FotosEspacos/")@ViewBag.Foto2" class="img-responsive" alt="Responsive image">
            </div>
        }
        @if (!string.IsNullOrWhiteSpace((string)ViewBag.Foto3))
        {
            <div class="form-group">
                <img src="@Url.Content("~/FotosEspacos/")@ViewBag.Foto3" class="img-responsive" alt="Responsive image">
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
